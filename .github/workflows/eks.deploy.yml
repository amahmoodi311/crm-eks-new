name: CRM EKS Deployment (Docker Hub)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Debug: Confirm Dockerfile and source
      - name: List Dockerfile and contents
        run: |
          echo "Backend files:"
          ls -l ./crm-api
          cat ./crm-api/Dockerfile
          echo "Frontend files:"
          ls -l ./crm-web
          cat ./crm-web/Dockerfile

      # 3️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ Build and push backend image (force no cache)
      - name: Build and push backend image
        run: |
          IMAGE=${{ vars.DOCKER_USERNAME }}/crm-backend:latest
          docker build --no-cache -f ./crm-api/Dockerfile -t $IMAGE ./crm-api
          docker push $IMAGE
          echo "BACKEND_IMAGE=$IMAGE" >> $GITHUB_ENV

      # 5️⃣ Build and push frontend image
      - name: Build and push frontend image
        run: |
          IMAGE=${{ vars.DOCKER_USERNAME }}/crm-frontend:latest
          docker build -t $IMAGE ./crm-web
          docker push $IMAGE
          echo "FRONTEND_IMAGE=$IMAGE" >> $GITHUB_ENV

      # 6️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ vars.MY_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.MY_SECRET_KEY }}
          aws-region: us-east-1  # change if needed

      # 7️⃣ Update kubeconfig
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name crm-cluster --region eu-north-1

      # 8️⃣ Deploy to EKS
      - name: Deploy to EKS
        run: |
          cd k8s
          
          # Replace placeholders in YAMLs with actual image tags
          sed -i "s|IMAGE_BACKEND|${{ env.BACKEND_IMAGE }}|g" be-deployment.yml
          sed -i "s|IMAGE_FRONTEND|${{ env.FRONTEND_IMAGE }}|g" fe-deployment.yml

          # Apply Kubernetes manifests
          kubectl apply -f mysql-secret.yml
          kubectl apply -f mysql-deployment.yml
          kubectl apply -f mysql-service.yml
          kubectl apply -f be-deployment.yml
          kubectl apply -f be-service.yml
          kubectl apply -f fe-deployment.yml
          kubectl apply -f fe-service.yml
