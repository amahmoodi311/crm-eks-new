name: CRM Docker Deployment

on:
  workflow_dispatch:  # allows manual trigger
  push:
    branches:
      - main        # optional: triggers on push to main branch

jobs:
  database:
    runs-on: self-hosted
    steps:
      - name: Create Docker network
        run: |
          if docker network ls --format '{{ .Name }}' | grep -wq crmnetwork; then
            echo "crmnetwork exists"
          else
            docker network create crmnetwork
          fi

      - name: Setup MySQL
        run: |
          if docker ps -a --format '{{.Names}}' | grep -wq crmdb; then
            echo "crmdb already exists, skipping creation"
          else
            docker run -d --name crmdb \
              -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e MYSQL_DATABASE=crm \
              -p 3306:3306 mysql:8

  build:
    needs: database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Backend
      - name: Build backend image
        run: |
          docker build --no-cache -t ${{ vars.DOCKER_USERNAME }}/crm-api:latest ./crm-api

      # Frontend
      - name: Build frontend image
        run: |
          docker build --no-cache -t ${{ vars.DOCKER_USERNAME }}/crm-web:latest ./crm-web

      - name: Docker login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push backend
      - name: Push backend image
        run: docker push ${{ vars.DOCKER_USERNAME }}/crm-api:latest

      # Push frontend
      - name: Push frontend image
        run: docker push ${{ vars.DOCKER_USERNAME }}/crm-web:latest
