name: crm-docker-deployment

on:
  workflow_dispatch:

jobs:
  database:
    runs-on: self-hosted
    steps:
      - name: create netwrok
        run: |
           if docker network -ls --format '{{ .Name}}' | grep -wq crmnetwrok; then
             echo "crmnetwork exists"
           else
             docker network create crmnetwork
            fi
      - name: crmdb container
        run: |
          if docker ps -a --format '{{ .Name}}' | grep -wq crmdb; then
            echo "crmdb container exists"
          else
            docker container run -dt --name crmdb -p 3306:3306 --network crmnetwork -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }}  -e MYSQL_DATABASE=crm mysql:8
          fi
    
  build:
    needs: database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Backend
      - name: Build backend image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/crm-api:latest ./crm-api

      # Frontend
      - name: Build frontend image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/crm-web:latest ./crm-web

      - name: Docker login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push backend
      - name: Push backend image
        run: docker push ${{ vars.DOCKER_USERNAME }}/crm-api:latest

      # Push frontend
      - name: Push frontend image
        run: docker push ${{ vars.DOCKER_USERNAME }}/crm-web:latest
    
  
